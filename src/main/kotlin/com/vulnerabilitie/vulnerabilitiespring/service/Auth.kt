package com.vulnerabilitie.vulnerabilitiespring.service

import com.vulnerabilitie.vulnerabilitiespring.entity.User
import com.vulnerabilitie.vulnerabilitiespring.exception.InvalidLoginException
import com.vulnerabilitie.vulnerabilitiespring.repository.UserRepository
import org.springframework.stereotype.Component
import java.util.*

@Component
class Auth(
    private var tokenService: TokenService,
    private var userRepository: UserRepository,
) {

    fun all(): List<User> {
        return userRepository.findAll().toList()
    }

    fun login(name: String): String {
        checkUser(name)
        return tokenService.generateToken(name)
    }

    private fun checkUser(name: String) {
        userRepository.findByName(name)
            .orElseThrow { InvalidLoginException() }
    }

    fun getUserPrincipal(token: String): Optional<User> {
        if (!tokenService.validate(token)) {
            throw InvalidLoginException()
        }

        val name = tokenService.getPayload(token)
        return  userRepository.findByName(name)
    }


}