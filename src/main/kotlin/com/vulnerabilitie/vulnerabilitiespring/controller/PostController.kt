package com.vulnerabilitie.vulnerabilitiespring.controller

import com.vulnerabilitie.vulnerabilitiespring.entity.Post
import com.vulnerabilitie.vulnerabilitiespring.entity.User
import com.vulnerabilitie.vulnerabilitiespring.repository.PostRepository
import com.vulnerabilitie.vulnerabilitiespring.service.Auth
import org.springframework.http.ResponseEntity
import org.springframework.web.bind.annotation.CookieValue
import org.springframework.web.bind.annotation.GetMapping
import org.springframework.web.bind.annotation.PostMapping
import org.springframework.web.bind.annotation.PutMapping
import org.springframework.web.bind.annotation.RequestBody
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RestController

@RestController
@RequestMapping("posts")
class PostController(
    private val postRepository: PostRepository,
    private val auth: Auth
) {

    @PostMapping()
    fun save(@CookieValue("jwt") token: String, @RequestBody postParam: Post): ResponseEntity<*>? {
        val user: User = auth.getUserPrincipal(token).get()
        postParam.user = user
        postRepository.save(postParam)
        return ResponseEntity.ok(postParam)
    }

    @PutMapping
    fun update(@CookieValue("jwt") token: String, @RequestBody postParam: Post): ResponseEntity<*>? {
        postRepository.save(postParam)
        return ResponseEntity.ok(postParam)
    }

    @GetMapping
    fun list(): ResponseEntity<*>? {
        return ResponseEntity.ok(postRepository.findAll())
    }
}